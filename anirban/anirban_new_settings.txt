#

# Default settings for the simulation

#

## Scenario settings
Scenario.name = anirban_test
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 43200s == 12h
#Scenario.endTime = 43200
Scenario.endTime = 2000

## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second)
# transmitRange : range of the interface (meters)

# "Bluetooth" interface for all nodes
btInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
btInterface.transmitSpeed = 250k
btInterface.transmitRange = 100

# High speed, long range, interface for group 4
highspeedInterface.type = SimpleBroadcastInterface
highspeedInterface.transmitSpeed = 10M
highspeedInterface.transmitRange = 1000

# Define 6 different node groups
Scenario.nrofHostGroups = 1

# The Tram groups
Group.groupID = t
Group.bufferSize = 50M
Group.router = EpidemicRouter
Group.movementModel = ShortestPathMapBasedMovement
#Group.routeFile = data/tram3.wkt
Group.routeType = 1
Group.waitTime = 10, 30
Group.speed = 40, 50
Group.nrofHosts = 100
Group.nrofInterfaces = 1
Group.interface1 = btInterface
#Group.interface2 = highspeedInterface



# External Messages generated
## Message creation parameters
# How many event generators
#Events.nrof = 20
#Events.class = ExternalEventsQueue
#Events.filePath = anirban/test.txt


## Message creation parameters
# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = MessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events1.interval = 25,35
# Message sizes (500kB - 1MB)
Events1.size = 500k,1M
# range of message source/destination addresses
Events1.hosts = 0,99
# Message ID prefix
Events1.prefix = M

## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 4500, 3400
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 4

MapBasedMovement.mapFile1 = data/roads.wkt
MapBasedMovement.mapFile2 = data/main_roads.wkt
MapBasedMovement.mapFile3 = data/pedestrian_paths.wkt
MapBasedMovement.mapFile4 = data/shops.wkt

## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 11
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting
Report.reportDir = relatorios/
# Report classes to load

Report.report1 = MessageStatsReport
Report.report2 = DeliveredMessagesReport
Report.report3 = ContactsPerHourReport
Report.report4 = CreatedMessagesReport
Report.report5 = DistanceDelayReport
Report.report6 = MessageLocationReport
MessageLocationReport.granularity = 1
MessageLocationReport.messages = 1
Report.report7 = MessageGraphvizReport
Report.report8 = MessageDeliveryReport
Report.report9 = MessageDelayReport
Report.report10 = MessageReport
Report.report11 = EventLogReport

## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true


## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
